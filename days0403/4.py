"""

引用计数+1
    1，对象被创建时，eg: a= "achen"
    2,对象被copy引用时，eg：b=a 此时a引用计数+1
    3.对象被作为参数，传入到一个函数中时
    4.对象作为一个子元素，储存到容器中时，eg：list=[a,b]

引用计数—1
    1.对象别名被销毁 del a
    2.对象引用被赋予新的对象，eg:b=c 此时b引用计数—1
    3.一个函数离开它的作用域，eg：函数执行完，他的引用计数-1
    4.对象所在容器被销毁，或从容器中删除

引用计数优点：
    简单，直观
    实时性，只要没有了引用就释放资源
引用计数缺点：
    维护引用计数需要消耗一定资源
    循环应用时，无法回收



标记清除
    内存A 付给list1 内存A引用 1
    内存B 付给list2 内存B引用 1
    内存C 付给list3/list4 内存C引用 2
    内存D 付给list6 内存D引用1


    list1 list2 循环引用 内存A,内存B引用计数2
    list3 list6 循环引用 内存C引用计数3，内存D 引用计数2


    del list1 内存A引用 1
    del lsit2 内存B引用 1
    del lsit3 内存C引用 2
    del list4 内存D引用 1


    此时引用计数出现问题 用眼不能回收 泄露

    第一步：将删除的对象的引用计数都—1
    内存A 引用 0
    内存B 引用 0
    内存c 引用 1
    内存D 引用 0

    将内存引用计数为0 对象加入死亡容器（A,B，D都在死亡容器）
    将内存引用计数不为0







"""